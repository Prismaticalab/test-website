import { useEffect } from "react";
import Header from "@/components/Header";
import Hero from "@/components/Hero";
import Approach from "@/components/Approach";
import Features from "@/components/Features";
import CallToAction from "@/components/CallToAction";
import Footer from "@/components/Footer";
import ScrollOverlay from "@/components/ScrollOverlay";
import { useScrollFriction } from "@/hooks/useScrollFriction";

const Index = () => {
  // Using the scroll friction hook
  const scrollContainerRef = useScrollFriction();

  useEffect(() => {
    // Simple smooth scroll for anchor links without complex effects
    const handleAnchorClick = function(e: Event) {
      e.preventDefault();
      
      const anchor = e.currentTarget as HTMLAnchorElement;
      const targetId = anchor.getAttribute('href');
      if (!targetId) return;
      
      const targetElement = document.querySelector(targetId);
      if (!targetElement) return;
      
      const elementPosition = targetElement.getBoundingClientRect().top;
      const offsetPosition = elementPosition + window.scrollY - 80;
      
      window.scrollTo({
        top: offsetPosition,
        behavior: 'smooth'
      });
    };
    
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', handleAnchorClick);
    });
    
    return () => {
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.removeEventListener('click', handleAnchorClick);
      });
    };
  }, []);

  return (
    <div className="min-h-screen bg-white">
      {/* Place ScrollOverlay at the top level, outside of scroll container */}
      <ScrollOverlay />
      <div ref={scrollContainerRef} className="scroll-container relative">
        <Header />
        <Hero />
        <Approach />
        <Features className="bg-zinc-50" />
        <CallToAction />
        <Footer />
      </div>
    </div>
  );
};

export default Index;
